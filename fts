#!/usr/bin/env node

'use strict';

/*
  Usage: fts [options] query

  -d [-]date[,date]
  -t tag
  -a author

  Options narrow down the result & are applied posterior to a query
  lookup.

  multiple -t or -a mean OR
*/

let path = require('path')
let stream = require('stream')

let query = require('./lib/query')

let colourise_snippet = function(s) {
    if (!process.stdout.isTTY) return s
    let t = {
	'b': "\u001b[0;1m",
	'/b': "\u001b[0;0m",
    }
    return s.replace(/<(\/?b)>/g, (all, p) => t[p]) + t['/b']
}

let magenta = function(s) {
    if (!process.stdout.isTTY) return s
    return "\u001b[0;35m" + s + "\u001b[0;0m"
}

let green = function(s) {
    if (!process.stdout.isTTY) return s
    return "\u001b[0;32m" + s + "\u001b[0;0m"
}

let yellow = function(s) {
    if (!process.stdout.isTTY) return s
    return "\u001b[0;33m" + s + "\u001b[0;0m"
}

let row_print = function(r) {
    let file
    if (r.year) {
	// a regular post
	file = path.join(r.year.toString(), query.pad(r.month), query.pad(r.day), r.name + '.md')
    } else {
	// a page
	file = path.join('p', r.name + '.md')
    }
    console.log([magenta(file), r.subject, green(r.authorslist), yellow(r.tagslist)].join(': '))
    if (r.snippet.length > 0) console.log(colourise_snippet(r.snippet))
}

let row_in_colour = function() {
    let ws = stream.Writable()
    ws._write = function(chunk, enc, next) {
	row_print(JSON.parse(chunk))
	next()
    }
    return ws
}


// int main(int argc, char **argv)
let conf = query.conf()
let params = query.argv_parse(process.argv.slice(2))
conf.log(params)

let mydb = new query.DB(conf.db_file)

let ric = row_in_colour()
query.search(mydb, params, conf)
    .then( reader => {
	reader.pipe(ric)
    })
